[package]
name = "quickie"
version = "0.6.0"
authors = ["ljedrz <ljedrz@gmail.com>"]
edition = "2021"
description = "A simple, low-level, and customizable implementation of a QUIC P2P node."
license = "CC0-1.0"
repository = "https://github.com/ljedrz/quickie"
documentation = "https://docs.rs/quickie"
readme = "README.md"
categories = ["network-programming", "asynchronous"]
keywords = ["p2p", "peer-to-peer", "networking"]
rust-version = "1.70"

[badges]
maintenance = { status = "actively-developed" }

[lib]
crate-type = ["lib"]

[features]
test = []

[dependencies]
async-trait = "0.1"
bytes = "1"
futures-util = { version = "0.3", features = ["sink"] }
parking_lot = "0.12"
quinn = { version = "0.11", features = ["ring", "runtime-tokio"] }
quinn-proto = { version = "0.11", default-features = false }
tokio = { version = "1.24", features = ["io-util", "macros", "net", "parking_lot", "rt", "sync", "time"] }
tokio-util = { version = "0.7", features = ["codec"] }
tracing = { version = "0.1", default-features = false }

[dev-dependencies]
deadline = "0.2"
humansize = "2"
libp2p = { version = "0.53", default-features = false, features = ["macros", "quic", "tls", "tokio"] }
peak_alloc = "0.2"
rcgen = { version = "0.13", default-features = false, features = ["pem", "ring"]}
rustls = { version = "0.23", default-features = false, features = ["ring", "std"] }
tokio = { version = "1.24", features = ["rt-multi-thread"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["ansi", "env-filter", "fmt", "parking_lot", "smallvec"] }
quickie = { path = ".", features = ["test"] } # a workaround to use the `test` feature in tests by default
